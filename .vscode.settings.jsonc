{
  "amazonQ.telemetry": false,
  "ansible.lightspeed.enabled": true,
  "apc.electron": {
    "frame": false,
    "titleBarStyle": "hidden",
    "trafficLightPosition": {
      "x": 10,
      "y": 10
    }
  },
  "apc.stylesheet": {
    ".composite.title": "padding: 0 8px !important;",
    ".composite.title .title-label": "padding: 0 !important;",
    ".part.sidebar.right.pane-composite-part .composite.has-composite-bar.header-or-footer.header": "padding: 0 8px !important;"
  },
  "breadcrumbs.enabled": false,
  "breadcrumbs.filePath": "off",
  "cSpell.language": "en,en-US,en-GB,fr,fr-FR",
  "cSpell.useGitignore": true,
  "cSpell.userWords": [
    "adminer",
    "adonisjs",
    "airbnb",
    "animejs",
    "ansible",
    "antd",
    "asein",
    "atlascode",
    "automapper",
    "auxiliarybar",
    "axios",
    "baseui",
    "basicauth",
    "bitbucket",
    "buildcache",
    "casl",
    "classname",
    "cloudinary",
    "clsx",
    "cmdk",
    "commitlint",
    "commitlintrc",
    "contentlayer",
    "Contentlayer",
    "contextive",
    "Contextive",
    "couldn",
    "Cruyff",
    "csrf",
    "cssnano",
    "csvfile",
    "DATEPICKER",
    "datetime",
    "datname",
    "daygrid",
    "dayjs",
    "deadcode",
    "devcontainer",
    "docsearch",
    "dotdrop",
    "dotfile",
    "dotfiles",
    "dotpath",
    "dtos",
    "durolost",
    "easings",
    "Edouard",
    "elementor",
    "Entrys",
    "envalid",
    "ENVFILE",
    "ESGIS",
    "esnext",
    "expirable",
    "Expirable",
    "expireable",
    "Expireable",
    "fastapi",
    "fastify",
    "Fastify",
    "filterset",
    "firstname",
    "fullcalendar",
    "fullname",
    "giscus",
    "github",
    "Gitter",
    "golevelup",
    "Grafikart",
    "graphcache",
    "gsap",
    "hador",
    "headlessui",
    "Healthcheck",
    "heroicons",
    "Highscore",
    "hookform",
    "inet",
    "ipod",
    "isodate",
    "jetbrains",
    "jira",
    "jotai",
    "jsonwebtoken",
    "jwks",
    "jwtid",
    "Jwts",
    "keepdot",
    "Keychain",
    "KKIA",
    "kkiapay",
    "Kkiapay",
    "knip",
    "Laravel",
    "lastname",
    "lerp",
    "lightspeed",
    "linkedin",
    "Linkedin",
    "logto",
    "maildev",
    "mailgun",
    "malva",
    "mapstruct",
    "mariadb",
    "maxage",
    "mediump",
    "meilisearch",
    "middlename",
    "millionlint",
    "mindmap",
    "minio",
    "mjml",
    "mmkv",
    "MMKV",
    "mysql",
    "MYSQL",
    "nativewind",
    "neofetch",
    "nestjs",
    "nestjsx",
    "Neue",
    "nextauth",
    "nextjs",
    "nextui",
    "nginx",
    "nocache",
    "noemit",
    "nolink",
    "nosniff",
    "nums",
    "nvmrc",
    "oidc",
    "openapi",
    "opencontainers",
    "opengraph",
    "originalname",
    "ormconfig",
    "orval",
    "Paas",
    "paranode",
    "partialize",
    "passmi",
    "pgcrypto",
    "pino",
    "Popconfirm",
    "poppins",
    "Porfolio",
    "postbuild",
    "postgres",
    "preinstall",
    "prelint",
    "pricings",
    "Protonmail",
    "qodana",
    "Qodana",
    "QODANA",
    "qrcode",
    "raleway",
    "ratelimit",
    "ratelimiter",
    "raynis",
    "Reactotron",
    "readwrite",
    "redoc",
    "Redoc",
    "reduxjs",
    "rehype",
    "releaserc",
    "Reporsitory",
    "rightskip",
    "Roboto",
    "sadoc",
    "Scanneur",
    "seedable",
    "seedconfig",
    "Segoe",
    "shiki",
    "shopify",
    "Sider",
    "signin",
    "signout",
    "signup",
    "slugified",
    "softinput",
    "sonarjs",
    "splittext",
    "srid",
    "ssword",
    "strapi",
    "Styleguides",
    "stylelint",
    "stylesheet",
    "styletron",
    "swiper",
    "Swiper",
    "tabularx",
    "tailwindcss",
    "tanstack",
    "thewlabs",
    "timestamptz",
    "titlebar",
    "Traceback",
    "trilon",
    "trpc",
    "typecheck",
    "typeorm",
    "unlighthouse",
    "Updog",
    "urql",
    "useragent",
    "UUIDV",
    "uvicorn",
    "VARCHAR",
    "velite",
    "Velite",
    "Vercel",
    "viewsets",
    "Vitest",
    "vsix",
    "waitlist",
    "WAKATIME",
    "webp",
    "weloveeya",
    "woocommerce",
    "wordpress",
    "XTWITTER",
    "zustand"
  ],
  "continue.enableTabAutocomplete": true,
  "database-client.telemetry.usesOnlineServices": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.organizeImports": "never"
  },
  "editor.cursorBlinking": "expand",
  "editor.fontFamily": "'JetBrains Mono', 'Geist Mono', 'SF Mono'",
  "editor.fontLigatures": true,
  "editor.fontSize": 13,
  "editor.inlineSuggest.enabled": true,
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.occurrencesHighlight": "off",
  "editor.quickSuggestionsDelay": 0,
  "editor.renderControlCharacters": true,
  "editor.rulers": [
    140
  ],
  "editor.scrollbar.horizontal": "auto",
  "editor.scrollbar.vertical": "auto",
  "editor.showFoldingControls": "mouseover",
  "editor.snippetSuggestions": "inline",
  "editor.snippets.codeActions.enabled": true,
  "editor.suggest.insertMode": "replace",
  "editor.suggest.showSnippets": false,
  "editor.suggest.snippetsPreventQuickSuggestions": true,
  "editor.tabSize": 2,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.unicodeHighlight.nonBasicASCII": false,
  "editor.wordBasedSuggestions": "off",
  "editor.wordWrap": "on",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "eslint.lintTask.enable": true,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mdx": "$(capture).jpg, $(capture).png, $(capture).svg",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts, env.*",
    ".env.development": "*.env, .env.*, .envrc, env.d.ts, env.*",
    ".eslintrc": ".eslint*",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".prettierrc": ".prettierignore",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "Dockerfile": ".dockerignore, docker-compose.*, Dockerfile*",
    "I*.cs": "$(capture).cs",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "artisan": ".babelrc*, .codecov, .cssnanorc*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "eslint.config.js": ".eslint*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "jest.config.*": "jest.*",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": ".babelrc*, .codecov, .cssnanorc*, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tsdoc.*, uno.config.*, unocss.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, bun.lockb, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, firebase.json, grunt*, gulp*, jenkins*, lerna*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".editorconfig, .flake8, .isort.cfg, .pdm-python, .pdm.toml, .python-version, MANIFEST.in, Pipfile, Pipfile.lock, hatch.toml, pdm.lock, poetry.lock, poetry.lock*, pyproject.toml, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .release-please*.json, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "tsconfig.json": "tsconfig*",
    "vercel.json": ".vercelignore",
    "vite.config.*": ".babelrc*, .codecov, .cssnanorc*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*"
  },
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "files.eol": "\n",
  "files.exclude": {
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.git": true,
    "**/.hg": false,
    "**/.project": true,
    "**/.settings": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.watcherExclude": {
    "**/.hg/store/**": true,
    "**/node_modules/**": true,
    "**/node_modules/*/**": true
  },
  "git.allowNoVerifyCommit": false,
  "git.autoStash": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableCommitSigning": true,
  "git.fetchOnPull": true,
  "git.openRepositoryInParentFolders": "never",
  "git.pruneOnFetch": true,
  "github.copilot.chat.localeOverride": "en",
  "github.copilot.chat.welcomeMessage": "never",
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.enable": {
    "*": true,
    "markdown": true,
    "plaintext": false,
    "scminput": false
  },
  "github.gitProtocol": "ssh",
  "gitlens.ai.experimental.generateCommitMessage.enabled": true,
  "gitlens.ai.experimental.model": "vscode",
  "gitlens.ai.experimental.vscode.model": "copilot:gpt-4o",
  "gitlens.experimental.generateCommitMessagePrompt": "Generate a concise git commit message written in present tense. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes in under 70 characters. Follow conventional commit format and choose a type from the type-to-description JSON below that best describes the git diff: { 'docs': 'Documentation only changes', 'style': 'Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)', 'refactor': 'A code change that neither fixes a bug nor adds a feature', 'perf': 'A code change that improves performance', 'test': 'Adding missing tests or correcting existing tests', 'build': 'Changes that affect the build system or external dependencies', 'ci': 'Changes to our CI configuration files and scripts', 'chore': 'Other changes that don't modify src or test files', 'revert': 'Reverts a previous commit', 'feat': 'A new feature', 'fix': 'A bug fix' }. If necessary, follow with an explanatory body providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Footer (optional): Include references to relevant issues, pull requests, or breaking changes, formatted as: -Refs: #issue_number, BREAKING CHANGE: Description of what the breaking change is. Exclude anything unnecessary such as translation free from quoted brackets eg. (```), your entire response will be passed directly into git commit.",
  "gitlens.graph.layout": "editor",
  "gitlens.graph.minimap.additionalTypes": [
    "tags",
    "localBranches"
  ],
  "gitlens.graph.minimap.enabled": false,
  "gitlens.telemetry.enabled": false,
  "inlineChat.experimental.textButtons": true,
  "javascript.format.insertSpaceAfterConstructor": true,
  "javascript.format.semicolons": "remove",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "leetcode.allowReportData": false,
  "leetcode.hint.commandShortcut": false,
  "leetcode.hint.commentDescription": false,
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.hint.setDefaultLanguage": false,
  "leetcode.problems.sortStrategy": "None",
  "leetcode.showDescription": "Both",
  "leetcode.workspaceFolder": "$HOME/Developer/Learn/leetcode",
  "material-icon-theme.files.color": "#42a5f5",
  "material-icon-theme.folders.color": "#42a5f5",
  "material-icon-theme.folders.theme": "specific",
  "material-icon-theme.saturation": 0.5,
  "pieces.telemetry": false,
  "projectManager.git.baseFolders": [
    "/Users/wilfriedago/Developer/Works",
    "/Users/wilfriedago/Developer/Learn",
    "/Users/wilfriedago/Developer/Projects"
  ],
  "remote.autoForwardPortsSource": "hybrid",
  "search.exclude": {
    "**/node_modules": true
  },
  "sortJSON.contextMenu": {
    "sortJSONAlphaNum": false,
    "sortJSONAlphaNumReverse": false,
    "sortJSONKeyLength": false,
    "sortJSONKeyLengthReverse": false,
    "sortJSONReverse": false,
    "sortJSONType": false,
    "sortJSONTypeReverse": false,
    "sortJSONValues": false,
    "sortJSONValuesReverse": false
  },
  "sortJSON.orderOverride": [
    "name",
    "version",
    "description"
  ],
  "sortJSON.orderUnderride": [
    "dependencies",
    "peerDependencies",
    "devDependencies"
  ],
  "symbols.files.associations": {
    "*.config.ts": "gear",
    "*.controller.ts": "nest-controller",
    "*.decorator.ts": "nest-decorator",
    "*.filter.ts": "nest-filter",
    "*.guard.ts": "nest-guard",
    "*.interceptor.ts": "nest-interceptor",
    "*.middleware.ts": "nest-middleware",
    "*.module.ts": "nest-module",
    "*.pipe.ts": "nest-pipe",
    "*.service.ts": "nest-service"
  },
  "symbols.folders.associations": {
    "controllers": "folder-nest-controllers",
    "decorators": "folder-nest-decorators",
    "filters": "folder-nest-filters",
    "guards": "folder-nest-guards",
    "interceptors": "folder-nest-interceptors",
    "middlewares": "folder-nest-middlewares",
    "modules": "folder-nest-modules",
    "pipes": "folder-nest-pipes",
    "services": "folder-nest-services",
    "types": "folder-interfaces"
  },
  "symbols.hidesExplorerArrows": false,
  "telemetry.telemetryLevel": "off",
  "terminal.external.osxExec": "Warp.app",
  "terminal.integrated.allowedLinkSchemes": [
    "file",
    "http",
    "https",
    "mailto",
    "vscode",
    "vscode-insiders",
    "docker-desktop"
  ],
  "terminal.integrated.bellDuration": 400,
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.cursorWidth": 2,
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.ignoreProcessNames": [
    "bash",
    "zsh"
  ],
  "typescript.autoClosingTags": true,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.validate.enable": true,
  "vim.easymotion": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "after": [
        "<Esc>"
      ],
      "before": [
        "j",
        "j"
      ]
    }
  ],
  "vim.leader": "<Space>",
  "vim.normalModeKeyBindings": [
    // Navigation
    // Switch between buffers
    {
      "before": [
        "<S-h>"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "<S-l>"
      ],
      "commands": [
        ":bnext"
      ]
    },
    // splits
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "after": [
        "d",
        "d"
      ],
      "before": [
        "<leader>",
        "d"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "lineBreakInsert"
      ],
      "silent": true
    }
  ],
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vsixViewer.enableTelemetry": false,
  "window.autoDetectColorScheme": true,
  "window.autoDetectHighContrast": true,
  "window.commandCenter": false,
  "window.customTitleBarVisibility": "never",
  "window.titleBarStyle": "native",
  "workbench.activityBar.location": "top",
  "workbench.colorCustomizations": {
    "editor.selectionBackground": "#008b3f75",
    "editor.selectionHighlightBackground": "#008b3f5d"
  },
  "workbench.editor.autoLockGroups": {
    "workbench.editorinputs.searchEditorInput": true
  },
  "workbench.editor.enablePreview": true,
  "workbench.experimental.enableNewProfilesUI": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.layoutControl.enabled": false,
  "workbench.list.fastScrollSensitivity": 10,
  "workbench.preferredDarkColorTheme": "dark-emerald",
  "workbench.productIconTheme": "material-product-icons",
  "workbench.settings.editor": "json",
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "none",
  "workbench.tree.indent": 10
}
