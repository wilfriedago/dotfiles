# -----------------------------------------------------------------------------
# Global Git Configuration
# -----------------------------------------------------------------------------

[user]
	name = Wilfried AGO
	email = 68906789+wilfriedago@users.noreply.github.com
	username = wilfriedago
	signingKey = 63B083B382E2CB3C8764042344FF24F26FCE4AA9

[github]
	user = wilfriedago
	email = 68906789+wilfriedago@users.noreply.github.com

[init]
	defaultBranch = main

[core]
	editor = nvim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore_global
	ignorecase = false
	autocrlf = false

[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
	ui = true

[rerere]
	enabled = 1
	autoupdate = 1

[push]
  autoSetupRemote = true

[pull]
  rebase = true

[rebase]
  autoStash = true

[commit]
  gpgsign = true
  # template = ~/.gitmessage

[tag]
	forceSignAnnotated = true

[column]
	ui = auto

[branch]
	sort = -committerdate

[alias]
	fpush = push

[hub]
  protocol = https

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[gpg]
	program = gpg

[gitflow "branch"]
  master = main
  develop = develop

[gitflow "prefix"]
  feature = feat/
  release = release/
  hotfix = hotfix/
  bugfix = bugfix/
  versiontag = v

[alias]
  # Adding files
  a = add --all
  ai = add -i

  # Apply patches
  ap = apply
  as = apply --stat
  ac = apply --check
  ama = am --abort
  amr = am --resolved
  ams = am --skip

  # Branch management
  b = branch
  ba = branch -a
  bd = branch -d
  bdd = branch -D
  br = branch -r
  bc = rev-parse --abbrev-ref HEAD
  bu = "!git rev-parse --abbrev-ref --symbolic-full-name \"@{u}\""
  bs = "!git-branch-status"

  # Commits
  c = commit
  ca = commit -a
  cm = commit -m
  cam = commit -am
  cem = commit --allow-empty -m
  cd = commit --amend
  cad = commit -a --amend
  ced = commit --allow-empty --amend

  # Cloning
  cl = clone
  cld = clone --depth 1
  clg = "!sh -c 'git clone git://github.com/$1 $(basename $1)' -"
  clgp = "!sh -c 'git clone git@github.com:$1 $(basename $1)' -"
  clgu = "!sh -c 'git clone git@github.com:$(git config --get user.username)/$1 $1' -"

  # Cherry-pick
  cp = cherry-pick
  cpa = cherry-pick --abort
  cpc = cherry-pick --continue

  # Diff
  d = diff
  dp = diff --patience
  dc = diff --cached
  dk = diff --check
  dck = diff --cached --check
  dt = difftool
  dct = difftool --cached

  # Fetch
  f = fetch
  fo = fetch origin
  fu = fetch upstream

  # Format patch
  fp = format-patch

  # Fsck
  fk = fsck

  # Grep
  g = grep -p

  # Log
  l = log --oneline
  lg = log --oneline --graph --decorate

  # Ls-files
  ls = ls-files
  lsf = "!git ls-files | grep -i"

  # Merge
  m = merge
  ma = merge --abort
  mc = merge --continue
  ms = merge --skip

  # Checkout
  o = checkout
  om = checkout master
  ob = checkout -b
  opr = "!sh -c 'git fo pull/$1/head:pr-$1 && git o pr-$1' -"

  # Prune
  pr = prune -v

  # Push
  ps = push
  psf = push -f
  psu = push -u
  pst = push --tags
  pso = push origin
  psao = push --all origin
  psfo = push -f origin
  psuo = push -u origin
  psom = push origin master
  psaom = push --all origin master
  psfom = push -f origin master
  psuom = push -u origin master
  psoc = "!git push origin $(git bc)"
  psaoc = "!git push --all origin $(git bc)"
  psfoc = "!git push -f origin $(git bc)"
  psuoc = "!git push -u origin $(git bc)"
  psdc = "!git push origin :$(git bc)"

  # Pull
  pl = pull
  pb = pull --rebase
  plo = pull origin
  pbo = pull --rebase origin
  plom = pull origin master
  ploc = "!git pull origin $(git bc)"
  pbom = pull --rebase origin master
  pboc = "!git pull --rebase origin $(git bc)"
  plu = pull upstream
  plum = pull upstream master
  pluc = "!git pull upstream $(git bc)"
  pbum = pull --rebase upstream master
  pbuc = "!git pull --rebase upstream $(git bc)"

  # Rebase
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbs = rebase --skip

  # Reset
  re = reset
  rh = reset HEAD
  reh = reset --hard
  rem = reset --mixed
  res = reset --soft
  rehh = reset --hard HEAD
  remh = reset --mixed HEAD
  resh = reset --soft HEAD
  rehom = reset --hard origin/master

  # Remote
  r = remote
  ra = remote add
  rr = remote rm
  rv = remote -v
  rn = remote rename
  rp = remote prune
  rs = remote show
  rao = remote add origin
  rau = remote add upstream
  rro = remote remove origin
  rru = remote remove upstream
  rso = remote show origin
  rsu = remote show upstream
  rpo = remote prune origin
  rpu = remote prune upstream

  # Remove
  rmf = rm -f
  rmrf = rm -r -f

  # Status
  s = status
  sb = status -s -b

  # Stash
  sa = stash apply
  sc = stash clear
  sd = stash drop
  sl = stash list
  sp = stash pop
  ss = stash save
  ssk = stash save -k
  sw = stash show
  st = "!git stash list | wc -l 2>/dev/null | grep -oEi '[0-9][0-9]*'"

  # Tag
  t = tag
  td = tag -d

  # Show
  w = show
  wp = show -p
  wr = show -p --no-color

  # SVN (if used)
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit

  # Submodules
  subadd = "!sh -c 'git submodule add git://github.com/$1 $2/$(basename $1)' -"
  subrm = "!sh -c 'git submodule deinit -f -- $1 && rm -rf .git/modules/$1 && git rm -f $1' -"
  subup = submodule update --init --recursive
  subpull = "!git submodule foreach git pull --tags -f origin master"

  # Assume untracked
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = "!git ls -v | grep ^h | cut -c 3-"
  unassumeall = "!git assumed | xargs git unassume"
  assumeall = "!git status -s | awk {'print $2'} | xargs git assume"

  # Releases / versioning
  bump = "!sh -c 'git commit -am \"Version bump v$1\" && git psuoc && git release $1' -"
  release = "!sh -c 'git tag v$1 && git pst' -"
  unrelease = "!sh -c 'git tag -d v$1 && git pso :v$1' -"
  merged = "!sh -c 'git o master && git plom && git bd $1 && git rpo' -"

  # Utilities
  aliases = "!git config -l | grep alias | cut -c 7-"
  snap = "!git stash save 'snapshot: $(date)' && git stash apply 'stash@{0}'"
  bare = "!sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -"
  whois = "!sh -c 'git log -i -1 --author=\"$1\" --pretty=\"format:%an <%ae>\"' -"
  serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
  behind = "!git rev-list --left-only --count $(git bu)...HEAD"
  ahead = "!git rev-list --right-only --count $(git bu)...HEAD"
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
  subrepo = "!sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 master' -"
  human = "name-rev --name-only --refs=refs/heads/*"
